{"version":3,"sources":["tooltip/tooltip.js"],"names":["angular","module","provider","defaults","this","animation","customClass","prefixClass","prefixEvent","container","target","placement","template","contentTemplate","trigger","keyboard","html","show","title","type","delay","$get","$window","$rootScope","$compile","$q","$templateCache","$http","$animate","dimensions","$$rAF","$parse","TooltipFactory","element","config","getPosition","options","offset","position","getCalculatedOffset","actualWidth","actualHeight","split","top","height","left","width","$tooltip","nodeName","toLowerCase","$options","extend","$promise","fetchTemplate","scope","$scope","$new","isObject","isString","map","parseFloat","length","hide","$hide","$$postDigest","$show","$toggle","toggle","$isShown","timeout","hoverState","then","templateEl","contentEl","findElement","removeAttr","outerHTML","tipLinker","tipElement","tipTemplate","tipContainer","data","replace","htmlReplaceRegExp","trim","apply","init","isNumber","isElement","triggers","forEach","on","enter","leave","isTouch","$onFocusElementMouseDown","focus","destroy","i","off","remove","clearTimeout","$destroy","setTimeout","$emit","parent","after","$element","css","display","visibility","addClass","$$phase","$root","$digest","$applyPlacement","$onKeyUp","$onFocusKeyUp","blur","elementPosition","tipWidth","prop","tipHeight","tipPosition","evt","which","preventDefault","stopPropagation","query","document","querySelectorAll","when","get","res","put","String","prototype","directive","$location","$sce","restrict","link","attr","key","isDefined","$observe","newValue","oldValue","trustAsHtml","tooltip","bsTooltip","$watch","bsShow","match","$on"],"mappings":"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","file":"tooltip.min.js","sourcesContent":["/* global angular */\n'use strict';\n\nangular.module('mgcrea.ngStrap.tooltip', ['mgcrea.ngStrap.helpers.dimensions'])\n\n  .provider('$tooltip', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      customClass: '',\n      prefixClass: 'tooltip',\n      prefixEvent: 'tooltip',\n      container: false,\n      target: false,\n      placement: 'top',\n      template: 'tooltip/tooltip.tpl.html',\n      contentTemplate: false,\n      trigger: 'hover focus',\n      keyboard: false,\n      html: false,\n      show: false,\n      title: '',\n      type: '',\n      delay: 0\n    };\n\n    this.$get = function($window, $rootScope, $compile, $q, $templateCache, $http, $animate, dimensions, $$rAF, $parse) {\n\n      var trim = String.prototype.trim;\n      var isTouch = 'createTouch' in $window.document;\n      var htmlReplaceRegExp = /ng-bind=\"/ig;\n\n      function TooltipFactory(element, config) {\n\n        var $tooltip = {};\n\n        // Common vars\n        var nodeName = element[0].nodeName.toLowerCase();\n        var options = $tooltip.$options = angular.extend({}, defaults, config);\n        $tooltip.$promise = fetchTemplate(options.template);\n        var scope = $tooltip.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n        if (options.delay) {\n          if (angular.isObject($parse(options.delay)(scope))) {\n            options.delay = $parse(options.delay)(scope);\n          } else if(angular.isString(options.delay)) {\n            var split = options.delay.split(',').map(parseFloat);\n            options.delay = split.length > 1 ? {show: split[0], hide: split[1]} : split[0];\n          }\n\n        }\n\n        // Support scope as string options\n        if(options.title) {\n          $tooltip.$scope.title = options.title;\n        }\n\n        // Provide scope helpers\n        scope.$hide = function() {\n          scope.$$postDigest(function() {\n            $tooltip.hide();\n          });\n        };\n        scope.$show = function() {\n          scope.$$postDigest(function() {\n            $tooltip.show();\n          });\n        };\n        scope.$toggle = function() {\n          scope.$$postDigest(function() {\n            $tooltip.toggle();\n          });\n        };\n        $tooltip.$isShown = scope.$isShown = false;\n\n        // Private vars\n        var timeout, hoverState;\n\n        // Support contentTemplate option\n        if(options.contentTemplate) {\n          $tooltip.$promise = $tooltip.$promise.then(function(template) {\n            var templateEl = angular.element(template);\n            return fetchTemplate(options.contentTemplate)\n            .then(function(contentTemplate) {\n              var contentEl = findElement('[ng-bind=\"content\"]', templateEl[0]);\n              if(!contentEl.length) contentEl = findElement('[ng-bind=\"title\"]', templateEl[0]);\n              contentEl.removeAttr('ng-bind').html(contentTemplate);\n              return templateEl[0].outerHTML;\n            });\n          });\n        }\n\n        // Fetch, compile then initialize tooltip\n        var tipLinker, tipElement, tipTemplate, tipContainer;\n        $tooltip.$promise.then(function(template) {\n          if(angular.isObject(template)) template = template.data;\n          if(options.html) template = template.replace(htmlReplaceRegExp, 'ng-bind-html=\"');\n          template = trim.apply(template);\n          tipTemplate = template;\n          tipLinker = $compile(template);\n          $tooltip.init();\n        });\n\n        $tooltip.init = function() {\n\n          // Options: delay\n          if (options.delay && angular.isNumber(options.delay)) {\n            options.delay = {\n              show: options.delay,\n              hide: options.delay\n            };\n          }\n\n          // Replace trigger on touch devices ?\n          // if(isTouch && options.trigger === defaults.trigger) {\n          //   options.trigger.replace(/hover/g, 'click');\n          // }\n\n          // Options : container\n          if(options.container === 'self') {\n            tipContainer = element;\n          } else if(angular.isElement(options.container)) {\n            tipContainer = options.container;\n          } else if(options.container) {\n            tipContainer = findElement(options.container);\n          }\n\n          // Options: trigger\n          var triggers = options.trigger.split(' ');\n          angular.forEach(triggers, function(trigger) {\n            if(trigger === 'click') {\n              element.on('click', $tooltip.toggle);\n            } else if(trigger !== 'manual') {\n              element.on(trigger === 'hover' ? 'mouseenter' : 'focus', $tooltip.enter);\n              element.on(trigger === 'hover' ? 'mouseleave' : 'blur', $tooltip.leave);\n              nodeName === 'button' && trigger !== 'hover' && element.on(isTouch ? 'touchstart' : 'mousedown', $tooltip.$onFocusElementMouseDown);\n            }\n          });\n\n          // Options: target\n          if(options.target) {\n            options.target = angular.isElement(options.target) ? options.target : findElement(options.target)[0];\n          }\n\n          // Options: show\n          if(options.show) {\n            scope.$$postDigest(function() {\n              options.trigger === 'focus' ? element[0].focus() : $tooltip.show();\n            });\n          }\n\n        };\n\n        $tooltip.destroy = function() {\n\n          // Unbind events\n          var triggers = options.trigger.split(' ');\n          for (var i = triggers.length; i--;) {\n            var trigger = triggers[i];\n            if(trigger === 'click') {\n              element.off('click', $tooltip.toggle);\n            } else if(trigger !== 'manual') {\n              element.off(trigger === 'hover' ? 'mouseenter' : 'focus', $tooltip.enter);\n              element.off(trigger === 'hover' ? 'mouseleave' : 'blur', $tooltip.leave);\n              nodeName === 'button' && trigger !== 'hover' && element.off(isTouch ? 'touchstart' : 'mousedown', $tooltip.$onFocusElementMouseDown);\n            }\n          }\n\n          // Remove element\n          if(tipElement) {\n            tipElement.remove();\n            tipElement = null;\n          }\n\n          // Cancel pending callbacks\n          clearTimeout(timeout);\n\n          // Destroy scope\n          scope.$destroy();\n\n        };\n\n        $tooltip.enter = function() {\n\n          clearTimeout(timeout);\n          hoverState = 'in';\n          if (!options.delay || !options.delay.show) {\n            return $tooltip.show();\n          }\n\n          timeout = setTimeout(function() {\n            if (hoverState ==='in') $tooltip.show();\n          }, options.delay.show);\n\n        };\n\n        $tooltip.show = function() {\n\n          scope.$emit(options.prefixEvent + '.show.before', $tooltip);\n          var parent = options.container ? tipContainer : null;\n          var after = options.container ? null : element;\n\n          // Hide any existing tipElement\n          if(tipElement) tipElement.remove();\n          // Fetch a cloned element linked from template\n          tipElement = $tooltip.$element = tipLinker(scope, function(clonedElement, scope) {});\n\n          // Set the initial positioning.  Make the tooltip invisible\n          // so IE doesn't try to focus on it off screen.\n          tipElement.css({top: '-9999px', left: '-9999px', display: 'block', visibility: 'hidden'}).addClass(options.placement);\n\n          // Options: animation\n          if(options.animation) tipElement.addClass(options.animation);\n          // Options: type\n          if(options.type) tipElement.addClass(options.prefixClass + '-' + options.type);\n          // Options: custom classes\n          if(options.customClass) tipElement.addClass(options.customClass);\n\n          $animate.enter(tipElement, parent, after, function() {\n            scope.$emit(options.prefixEvent + '.show', $tooltip);\n          });\n          $tooltip.$isShown = scope.$isShown = true;\n          scope.$$phase || (scope.$root && scope.$root.$$phase) || scope.$digest();\n          $$rAF(function () {\n            $tooltip.$applyPlacement();\n\n            // Once placed, make the tooltip visible\n            tipElement.css({visibility: 'visible'});\n          }); // var a = bodyEl.offsetWidth + 1; ?\n\n          // Bind events\n          if(options.keyboard) {\n            if(options.trigger !== 'focus') {\n              $tooltip.focus();\n              tipElement.on('keyup', $tooltip.$onKeyUp);\n            } else {\n              element.on('keyup', $tooltip.$onFocusKeyUp);\n            }\n          }\n\n        };\n\n        $tooltip.leave = function() {\n\n          clearTimeout(timeout);\n          hoverState = 'out';\n          if (!options.delay || !options.delay.hide) {\n            return $tooltip.hide();\n          }\n          timeout = setTimeout(function () {\n            if (hoverState === 'out') {\n              $tooltip.hide();\n            }\n          }, options.delay.hide);\n\n        };\n\n        $tooltip.hide = function(blur) {\n\n          if(!$tooltip.$isShown) return;\n          scope.$emit(options.prefixEvent + '.hide.before', $tooltip);\n\n          $animate.leave(tipElement, function() {\n            scope.$emit(options.prefixEvent + '.hide', $tooltip);\n\n            // Allow to blur the input when hidden, like when pressing enter key\n            if(blur && options.trigger === 'focus') {\n              return element[0].blur();\n            }\n          });\n\n          $tooltip.$isShown = scope.$isShown = false;\n          scope.$$phase || (scope.$root && scope.$root.$$phase) || scope.$digest();\n\n          // Unbind events\n          if(options.keyboard && tipElement !== null) {\n            tipElement.off('keyup', $tooltip.$onKeyUp);\n          }\n\n        };\n\n        $tooltip.toggle = function() {\n          $tooltip.$isShown ? $tooltip.leave() : $tooltip.enter();\n        };\n\n        $tooltip.focus = function() {\n          tipElement[0].focus();\n        };\n\n        // Protected methods\n\n        $tooltip.$applyPlacement = function() {\n          if(!tipElement) return;\n\n          // Get the position of the tooltip element.\n          var elementPosition = getPosition();\n\n          // Get the height and width of the tooltip so we can center it.\n          var tipWidth = tipElement.prop('offsetWidth'),\n              tipHeight = tipElement.prop('offsetHeight');\n\n          // Get the tooltip's top and left coordinates to center it with this directive.\n          var tipPosition = getCalculatedOffset(options.placement, elementPosition, tipWidth, tipHeight);\n\n          // Now set the calculated positioning.\n          tipPosition.top += 'px';\n          tipPosition.left += 'px';\n          tipElement.css(tipPosition);\n\n        };\n\n        $tooltip.$onKeyUp = function(evt) {\n          evt.which === 27 && $tooltip.hide();\n        };\n\n        $tooltip.$onFocusKeyUp = function(evt) {\n          evt.which === 27 && element[0].blur();\n        };\n\n        $tooltip.$onFocusElementMouseDown = function(evt) {\n          evt.preventDefault();\n          evt.stopPropagation();\n          // Some browsers do not auto-focus buttons (eg. Safari)\n          $tooltip.$isShown ? element[0].blur() : element[0].focus();\n        };\n\n        // Private methods\n\n        function getPosition() {\n          if(options.container === 'body') {\n            return dimensions.offset(options.target[0] || element[0]);\n          } else {\n            return dimensions.position(options.target[0] || element[0]);\n          }\n        }\n\n        function getCalculatedOffset(placement, position, actualWidth, actualHeight) {\n          var offset;\n          var split = placement.split('-');\n\n          switch (split[0]) {\n          case 'right':\n            offset = {\n              top: position.top + position.height / 2 - actualHeight / 2,\n              left: position.left + position.width\n            };\n            break;\n          case 'bottom':\n            offset = {\n              top: position.top + position.height,\n              left: position.left + position.width / 2 - actualWidth / 2\n            };\n            break;\n          case 'left':\n            offset = {\n              top: position.top + position.height / 2 - actualHeight / 2,\n              left: position.left - actualWidth\n            };\n            break;\n          default:\n            offset = {\n              top: position.top - actualHeight,\n              left: position.left + position.width / 2 - actualWidth / 2\n            };\n            break;\n          }\n\n          if(!split[1]) {\n            return offset;\n          }\n\n          // Add support for corners @todo css\n          if(split[0] === 'top' || split[0] === 'bottom') {\n            switch (split[1]) {\n            case 'left':\n              offset.left = position.left;\n              break;\n            case 'right':\n              offset.left =  position.left + position.width - actualWidth;\n            }\n          } else if(split[0] === 'left' || split[0] === 'right') {\n            switch (split[1]) {\n            case 'top':\n              offset.top = position.top - actualHeight;\n              break;\n            case 'bottom':\n              offset.top = position.top + position.height;\n            }\n          }\n\n          return offset;\n        }\n\n        return $tooltip;\n\n      }\n\n      // Helper functions\n\n      function findElement(query, element) {\n        return angular.element((element || document).querySelectorAll(query));\n      }\n\n      function fetchTemplate(template) {\n        return $q.when($templateCache.get(template) || $http.get(template))\n        .then(function(res) {\n          if(angular.isObject(res)) {\n            $templateCache.put(template, res.data);\n            return res.data;\n          }\n          return res;\n        });\n      }\n\n      return TooltipFactory;\n\n    };\n\n  })\n\n  .directive('bsTooltip', function($window, $location, $sce, $tooltip, $$rAF) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink(scope, element, attr, transclusion) {\n\n        // Directive options\n        var options = {scope: scope};\n        angular.forEach(['template', 'contentTemplate', 'placement', 'container', 'target', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'type', 'customClass'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // Observe scope attributes for change\n        angular.forEach(['title'], function(key) {\n          attr.$observe(key, function(newValue, oldValue) {\n            scope[key] = $sce.trustAsHtml(newValue);\n            angular.isDefined(oldValue) && $$rAF(function() {\n              tooltip && tooltip.$applyPlacement();\n            });\n          });\n        });\n\n        // Support scope as an object\n        attr.bsTooltip && scope.$watch(attr.bsTooltip, function(newValue, oldValue) {\n          if(angular.isObject(newValue)) {\n            angular.extend(scope, newValue);\n          } else {\n            scope.title = newValue;\n          }\n          angular.isDefined(oldValue) && $$rAF(function() {\n            tooltip && tooltip.$applyPlacement();\n          });\n        }, true);\n\n        // Visibility binding support\n        attr.bsShow && scope.$watch(attr.bsShow, function(newValue, oldValue) {\n          if(!tooltip || !angular.isDefined(newValue)) return;\n          if(angular.isString(newValue)) newValue = newValue.match(',?(tooltip),?');\n          newValue === true ? tooltip.show() : tooltip.hide();\n        });\n\n        // Initialize popover\n        var tooltip = $tooltip(element, options);\n\n        // Garbage collection\n        scope.$on('$destroy', function() {\n          if(tooltip) tooltip.destroy();\n          options = null;\n          tooltip = null;\n        });\n\n      }\n    };\n\n  });\n"],"sourceRoot":"/source/"}